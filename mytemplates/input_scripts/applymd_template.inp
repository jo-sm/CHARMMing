{% extends "input_scripts/generic_charmm_script.inp" %} blankme

{% block title %}Molecular Dynamics {% endblock %}

{% block body %} blankme
   {% include 'input_scripts/solvate_implicity.inp' %}

   ! read crystal dimensional data from the crystal structure made in solvation
   {% if usepbc %} blankme
      {% include 'input_scripts/setup_pbc.inp' %}
   {% endif %} blankme

   {% ifequal strtword "restart" %}
       open unit 40 read card name {{restartname}} ! restart file that will be read
   {% endifequal %}
   open unit 41 write card name {{outname}}-md.res !restart file that will be written
   open unit 31 write file name {{outname}}-md.dcd !trajectory file name

   ! we may need masses for the temperature and pressure pistons
   scalar mass stat
   calc tmass = ?stot 

   dyna leap {{ cpt }} verlet {{ strtword }} nstep {{ nstep }} timestep 0.001 - ! run {{ nstep }} steps with a 1 fs time step
   CHARMM-scripts nprint 100 nsavc 100 iuncrd 31 iunwri 41 {% ifequal strtword "restart" %}iunrea 40{% endifequal %} - ! print every 100 steps; save trajectory and restart files
{% ifequal mdtype 'useheat' %} blankme
   CHARMM-scripts firstt {{ firstt }} finalt {{ finalt }} tbath {{ tbath }} tstruct {{ firstt }} ihtfrq {{ ihtfrq }} teminc {{ teminc }} - ! heat every {{ ihtfrq }} steps in {{ teminc }} K increments
{% endifequal %} blankme
{% ifequal mdtype 'usenve' %} blankme
   CHARMM-scripts firstt {{ nvetemp }} finalt {{ nvetemp }} tstruct {{ nvetemp }} ieqfrq {{ ieqfrq }} - ! NVE run with initial temperature {{ nvetemp }}
{% endifequal %} blankme
{% ifequal mdtype 'usenvt' %} blankme
   CHARMM-scripts hoover reft {{ hoovertemp }} tmass @tmass firstt {{ hoovertemp }} tstruct {{ hoovertemp }} - ! Use Nose-Hoover thermostat at a temperature of {{ hoovertemp }} K.
{% endifequal %} blankme
{% ifequal mdtype 'usenpt' %} blankme
   CHARMM-scripts hoover reft {{ hoovertemp }} tmass @tmass firstt {{ hoovertemp }} tstruct {{ hoovertemp }} - ! Use Nose-Hoover thermostat at a temperature of {{ hoovertemp }} K.
{% endifequal %} blankme
{% if dopbc %} blankme
   {% ifequal mdtype 'usenpt' %} blankme
     CHARMM-scripts pcons pref 1.0 pmass @pmass pgamma {{ pgamma }} - ! Use constant pressure: PMASS = mass of pressure piston, PGAMMA = pressure piston collision frequency
   {% else %} blankme
     CHARMM-scripts pcons pref 1.0 pmass 0.0 pgamma 0.0 - ! report pressure statistics, however since PMASS is 0 constant pressure is not used
   {% endifequal %} blankme
{% endif %} blankme
   CHARMM-scripts echeck 500. iasors 1 iasvel 1 iscvel 0 ! 500 kcal/mol max energy variance, reassign (NOT scale) velocities from a gaussian distribution during heating/equil

   {% include 'input_scripts/write_out_struct.inp'%}

   {% if genavg_struct %}
      CHARMM-scripts open unit 31 read file name {{outname}}-md.dcd
      CHARMM-scripts coor dyna firstu 31 nunit 1 sele .not. segid bwat end orient sele .not. segid bwat end
      CHARMM-scripts write coor card name {{outname}}-mdavg.crd
      CHARMM-scripts * Average coordinates from MD
      CHARMM-scripts *
   {% endif %}
{% endblock %} blankme
